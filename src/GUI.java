import javax.swing.*;
import java.util.ArrayList;

/**
 * @author Raph Tugasan on 02/06/15
 * Description
 *  -Main UI class form
 */
public class GUI extends javax.swing.JFrame {

    /* Class instantiations */
    private FileHelper fileHelper = new FileHelper(GUI.this);

    /* Number of output lines for each input line */
    private final int OUTPUT_LINES_MAX = 3;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listModel = new DefaultListModel();
        consoleScreen = new javax.swing.JList(listModel);
        loadButton = new javax.swing.JButton();
        processButton = new javax.swing.JButton();
        processButton.setEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programming Exercise 01 - Arithmetic Evaluation");
        setResizable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(consoleScreen);

        loadButton.setText("Load File");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        processButton.setText("Process");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Load button onClickListener
     * @param evt
     */
    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        fileHelper.chooseFile();
        // TODO add your handling code here:
    }//GEN-LAST:event_loadButtonActionPerformed

    /**
     * Process button onClickListener
     * @param evt
     */
    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        fileHelper.processCurrentFile();
        // TODO add your handling code here:
    }//GEN-LAST:event_loadButtonActionPerformed

    /**
     * Prints to console screen the three output lines required for each input line
     * @param lines
     */
    public void printOutputLines (String[] lines) {
        for (int i = 0; i < OUTPUT_LINES_MAX; i++) {
            listModel.addElement(lines[i]);
        }
        listModel.addElement("\n");
    }

    /**
     * Prints to console screen that file processing is done successfully
     * @param fileName
     */
    public void printDoneProcessingRemarks (String fileName, ArrayList<String> errors) {

        if (errors.size() == 0) {
            listModel.addElement("Done processing \"" + fileName + "\" :)");
            listModel.addElement("\n");
        } else if (errors.size() > 0) {
            listModel.addElement("Done processing \"" + fileName + "\"");
            listModel.addElement("\n");
            listModel.addElement("Errors found: ");
            for (int i = 0; i < errors.size(); i++) {
                listModel.addElement(errors.get(i));
            }
            listModel.addElement("\n");
        }
    }

    /**
     * Prints to console screen that file loading is done successfully
     * @param fileName
     */
    public void printDoneLoadingRemarks (String fileName) {
        listModel.addElement("\"" +fileName + " \" was successfully loaded :)");
        listModel.addElement("\n");
    }

    /**
     * Prints to console screen that user has cancelled file loading process
     */
    public void printCancelledLoadingRemarks () {
        listModel.addElement("Loading Process canceled :(");
        listModel.addElement("\n");
    }

    /**
     * Clears the content of the console screen
     */
    public void clearScreen () {
        listModel.clear();
    }

    /**
     * Enable process button
     */
    public void enableProcessButton() {
        processButton.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton loadButton;
    private javax.swing.JButton processButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList consoleScreen;
    public DefaultListModel listModel;
    // End of variables declaration//GEN-END:variables
}
